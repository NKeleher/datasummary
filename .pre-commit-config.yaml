ci:
  skip: [pytest]

default_language_version:
  python: python3.12

default_stages: [commit]

repos:
  # general checks (see here: https://pre-commit.com/hooks.html)
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: check-merge-conflict
        stages: [commit]
      - id: check-yaml
        args: [--allow-multiple-documents]
        stages: [commit, manual]
      - id: check-toml
        stages: [commit, manual]
      - id: end-of-file-fixer
        stages: [commit, manual]
      - id: trailing-whitespace
        stages: [commit, manual]
      - id: check-added-large-files
        stages: [commit, manual]
      - id: check-ast
        stages: [commit, manual]
      - id: name-tests-test
        stages: [commit]

  - repo: https://github.com/python-jsonschema/check-jsonschema
    rev: 0.27.3
    hooks:
      - id: check-github-actions
        args: ["--verbose"]
        stages: [commit, manual]
      - id: check-github-workflows
        args: ["--verbose"]
        stages: [commit, manual]

  - repo: https://github.com/codespell-project/codespell
    rev: v2.2.4
    hooks:
      - id: codespell
        additional_dependencies:
          - tomli
        stages: [commit, manual]

  # black - formatting
  - repo: https://github.com/psf/black
    rev: 23.12.1
    hooks:
      - id: black
        name: black
        args:
          - "--config"
          - "./pyproject.toml"
        stages: [commit, manual]

  # ruff - linting
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: "v0.1.14"
    hooks:
      - id: ruff
        name: ruff
        stages: [commit, manual]

  # mypy - lint-like type checking
  #  - repo: https://github.com/pre-commit/mirrors-mypy
  #    rev: v1.8.0
  #    hooks:
  #      - id: mypy
  #        name: mypy

  # docformatter - formats docstrings to follow PEP 257
  - repo: https://github.com/pycqa/docformatter
    rev: v1.7.5
    hooks:
      - id: docformatter
        name: docformatter
        args:
          [
            -r,
            -i,
            --pre-summary-newline,
            --make-summary-multi-line,
            --wrap-summaries,
            "90",
            --wrap-descriptions,
            "90",
            src,
            tests,
          ]
        stages: [commit, manual]

  # prettier - formatting JS, CSS, JSON, Markdown, ...
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v4.0.0-alpha.8
    hooks:
      - id: prettier
        exclude: ^poetry.lock
        types_or: [css, javascript, yaml]
        stages: [commit, manual]

  - repo: https://github.com/DavidAnson/markdownlint-cli2
    rev: v0.12.1
    hooks:
      - id: markdownlint-cli2
        entry: markdownlint-cli2
        language: node
        types: [markdown]
        stages: [commit, manual]

  # bandit - find common security issues
  - repo: https://github.com/pycqa/bandit
    rev: 1.7.7
    hooks:
      - id: bandit
        name: bandit
        exclude: ^tests/
        args:
          - -r
          - src
        stages: [commit]

  - repo: local
    hooks:
      - id: pytest
        name: pytest
        entry: poetry run pytest --cov=src tests
        language: system
        types: [python]
        pass_filenames: false
        stages: [commit]
